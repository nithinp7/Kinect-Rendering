#version 430

const float sobel_x[3][3] = {
    {-1, 0, 1},
    {-2, 0, 2},
    {-1, 0, 1}
};

const float sobel_y[3][3] = {
    {1, 2, 1},
    {0, 0, 0},
    {-1, -2, -1}
};

layout(binding = 0, r8ui) uniform uimage2D img_in;
layout(binding = 1, r8ui) uniform uimage2D img_out;

layout(local_size_x = 1, local_size_y = 1) in;
void main() {

  ivec2 coords = ivec2(gl_GlobalInvocationID.xy);
  
  float dx = 0, dy = 0;
  for(int i = 0; i < 3; i++)
    for(int j = 0; j < 3; j++) {
        float val = float(imageLoad(img_in, ivec2(coords.x + i, coords.y + j)).r);
        dx += sobel_x[i][j] * val;
        dy += sobel_y[i][j] * val;
    }

  unsigned int d = unsigned int(sqrt(dx * dx + dy * dy));
  imageStore(img_out, coords, uvec4(d, 0, 0, 0));
}